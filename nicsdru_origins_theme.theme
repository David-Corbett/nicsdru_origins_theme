<?php

/**
 * @file
 * Functions to support theming in the nicsdru_origins_theme theme.
 */

use Drupal\Component\Utility\Xss;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function nicsdru_origins_theme_preprocess_html(array &$variables) {
  // Add class to html tag.
  $variables['html_attributes']->addClass('no-js');
}

/**
 * Implements hook_preprocess().
 */
function nicsdru_origins_theme_preprocess(&$variables) {
  // Set a variable based on the path.matcher.
  if (!isset($variables['is_front'])) {
    try {
      $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
    }
    catch (\Exception $e) {
      $variables['is_front'] = FALSE;
    }
  }

  // Ensure the cache varies correctly.
  $variables['#cache']['contexts'][] = 'url.path.is_front';
}

/**
 * Implements hook_page_attachments_alter().
 */
function nicsdru_origins_theme_page_attachments_alter(array &$page) {
  /*
   * Tell IE to use latest rendering engine (not to use compatibility mode).
   * /*$ie_edge = [
   *   '#type' => 'html_tag',
   *   '#tag' => 'meta',
   *   '#attributes' => [
   *   'http-equiv' => 'X-UA-Compatible',
   *   'content' => 'IE=edge',
   *   ],
   * ];
   * $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];
   */

  // Attach our drupal components library for authenticated users.
  $userCurrent = \Drupal::currentUser();

  if ($userCurrent->isAuthenticated()) {
    $page['#attached']['library'][] = 'nicsdru_origins_theme/authenticated-styles';
  }

  return $page;
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function nicsdru_origins_theme_preprocess_page(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function nicsdru_origins_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function nicsdru_origins_theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function nicsdru_origins_theme_preprocess_block(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function nicsdru_origins_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function nicsdru_origins_theme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_preprocess_node().
 */
function nicsdru_origins_theme_preprocess_node(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function nicsdru_origins_theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_preprocess_form().
 */
function nicsdru_origins_theme_preprocess_form(array &$variables) {
}

/**
 * Implements hook_preprocess_select().
 */
function nicsdru_origins_theme_preprocess_select(array &$variables) {
}

/**
 * Implements hook_preprocess_field().
 */
function nicsdru_origins_theme_preprocess_field(array &$variables, $hook) {
}

/**
 * Implements hook_preprocess_details().
 */
function nicsdru_origins_theme_preprocess_details(array &$variables) {
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function nicsdru_origins_theme_theme_suggestions_details_alter(array &$suggestions, array $variables) {
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function nicsdru_origins_theme_preprocess_menu_local_task(array &$variables) {
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nicsdru_origins_theme_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Alter login form to add out admin theming components.
  $form['#attached']['library'][] = 'nicsdru_origins_theme/authenticated-styles';
}
